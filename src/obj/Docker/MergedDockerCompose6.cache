name: dockercompose13981232929362161798
services:
  basket.api:
    build:
      context: D:\projects\AspnetMicroservices-main\src
      dockerfile: Services/Basket/Basket.API/Dockerfile
    container_name: basket.api
    depends_on:
      basketdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CacheSettings:ConnectionString: basketdb:6379
    image: basketapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8001"
        protocol: tcp
  basketdb:
    container_name: basketdb
    image: redis:alpine
    networks:
      default: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    restart: always
  catalog.api:
    build:
      context: D:\projects\AspnetMicroservices-main\src
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    depends_on:
      catalogdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: mongodb://catalogdb:27017
    image: catalogapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8000"
        protocol: tcp
  catalogdb:
    container_name: catalogdb
    image: mongo
    networks:
      default: null
    ports:
      - mode: ingress
        target: 27017
        published: "27017"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: mongo_data
        target: /data/db
        volume: {}
  discount.api:
    build:
      context: D:\projects\AspnetMicroservices-main\src
      dockerfile: Services/Discount/Discount.API/Dockerfile
    container_name: discount.api
    depends_on:
      discountdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234;
    image: discountapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8002"
        protocol: tcp
  discount.grpc:
    build:
      context: D:\projects\AspnetMicroservices-main\src
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: discountgrpc
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        protocol: tcp
      - mode: ingress
        target: 443
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\admin new\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\admin new\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  discountdb:
    image: postgres
    networks:
      default: null
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8000
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 9000
        published: "9000"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        bind:
          create_host_path: true
      - type: volume
        source: portainer_data
        target: /data
        volume: {}
networks:
  default:
    name: dockercompose13981232929362161798_default
volumes:
  mongo_data:
    name: dockercompose13981232929362161798_mongo_data
  portainer_data:
    name: dockercompose13981232929362161798_portainer_data